// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: services_v1.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Raft.Poc.V1 {
  public static partial class IdService
  {
    static readonly string __ServiceName = "raft.poc.v1.IdService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.GetIdRequest> __Marshaller_raft_poc_v1_GetIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.GetIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.GetIdReply> __Marshaller_raft_poc_v1_GetIdReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.GetIdReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.ConfigureIdRequest> __Marshaller_raft_poc_v1_ConfigureIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.ConfigureIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.ConfigureIdReply> __Marshaller_raft_poc_v1_ConfigureIdReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.ConfigureIdReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Raft.Poc.V1.GetIdRequest, global::Raft.Poc.V1.GetIdReply> __Method_GetId = new grpc::Method<global::Raft.Poc.V1.GetIdRequest, global::Raft.Poc.V1.GetIdReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetId",
        __Marshaller_raft_poc_v1_GetIdRequest,
        __Marshaller_raft_poc_v1_GetIdReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Raft.Poc.V1.ConfigureIdRequest, global::Raft.Poc.V1.ConfigureIdReply> __Method_ConfigureId = new grpc::Method<global::Raft.Poc.V1.ConfigureIdRequest, global::Raft.Poc.V1.ConfigureIdReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureId",
        __Marshaller_raft_poc_v1_ConfigureIdRequest,
        __Marshaller_raft_poc_v1_ConfigureIdReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Raft.Poc.V1.ServicesV1Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IdService</summary>
    [grpc::BindServiceMethod(typeof(IdService), "BindService")]
    public abstract partial class IdServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Raft.Poc.V1.GetIdReply> GetId(global::Raft.Poc.V1.GetIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Raft.Poc.V1.ConfigureIdReply> ConfigureId(global::Raft.Poc.V1.ConfigureIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(IdServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetId, serviceImpl.GetId)
          .AddMethod(__Method_ConfigureId, serviceImpl.ConfigureId).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IdServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Raft.Poc.V1.GetIdRequest, global::Raft.Poc.V1.GetIdReply>(serviceImpl.GetId));
      serviceBinder.AddMethod(__Method_ConfigureId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Raft.Poc.V1.ConfigureIdRequest, global::Raft.Poc.V1.ConfigureIdReply>(serviceImpl.ConfigureId));
    }

  }
  public static partial class ConfigurationService
  {
    static readonly string __ServiceName = "raft.poc.v1.ConfigurationService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.AddNodeRequest> __Marshaller_raft_poc_v1_AddNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.AddNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.AddNodeReply> __Marshaller_raft_poc_v1_AddNodeReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.AddNodeReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.RemoveNodeRequest> __Marshaller_raft_poc_v1_RemoveNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.RemoveNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Raft.Poc.V1.RemoveNodeReply> __Marshaller_raft_poc_v1_RemoveNodeReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Raft.Poc.V1.RemoveNodeReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Raft.Poc.V1.AddNodeRequest, global::Raft.Poc.V1.AddNodeReply> __Method_AddNode = new grpc::Method<global::Raft.Poc.V1.AddNodeRequest, global::Raft.Poc.V1.AddNodeReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddNode",
        __Marshaller_raft_poc_v1_AddNodeRequest,
        __Marshaller_raft_poc_v1_AddNodeReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Raft.Poc.V1.RemoveNodeRequest, global::Raft.Poc.V1.RemoveNodeReply> __Method_RemoveNode = new grpc::Method<global::Raft.Poc.V1.RemoveNodeRequest, global::Raft.Poc.V1.RemoveNodeReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveNode",
        __Marshaller_raft_poc_v1_RemoveNodeRequest,
        __Marshaller_raft_poc_v1_RemoveNodeReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Raft.Poc.V1.ServicesV1Reflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of ConfigurationService</summary>
    [grpc::BindServiceMethod(typeof(ConfigurationService), "BindService")]
    public abstract partial class ConfigurationServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Raft.Poc.V1.AddNodeReply> AddNode(global::Raft.Poc.V1.AddNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Raft.Poc.V1.RemoveNodeReply> RemoveNode(global::Raft.Poc.V1.RemoveNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ConfigurationServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddNode, serviceImpl.AddNode)
          .AddMethod(__Method_RemoveNode, serviceImpl.RemoveNode).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ConfigurationServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Raft.Poc.V1.AddNodeRequest, global::Raft.Poc.V1.AddNodeReply>(serviceImpl.AddNode));
      serviceBinder.AddMethod(__Method_RemoveNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Raft.Poc.V1.RemoveNodeRequest, global::Raft.Poc.V1.RemoveNodeReply>(serviceImpl.RemoveNode));
    }

  }
}
#endregion
